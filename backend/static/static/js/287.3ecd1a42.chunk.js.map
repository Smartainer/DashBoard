{"version":3,"file":"static/js/287.3ecd1a42.chunk.js","mappings":"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","sources":["components/Cards/TitleCard.js","components/Input/InputText.js","components/Typography/ErrorText.js","components/Typography/Subtitle.js","containers/Header.js","routes/index.js","containers/PageContent.js","routes/sidebar.js","containers/SidebarSubmenu.js","containers/LeftSidebar.js","features/common/components/NotificationBodyRightDrawer.js","containers/RightSidebar.js","features/containers/components/AddContainerModalBody.js","features/common/components/ConfirmationModalBody.js","features/containers/components/ShowContainerAnalysisModalBody.js","containers/ModalLayout.js","containers/Layout.js","features/dashboard/components/DashboardStats.js","features/dashboard/components/PageStats.js","features/dashboard/components/UserChannels.js","features/dashboard/components/LineChart.js","features/dashboard/components/BarChart.js","components/Input/SelectBox.js","features/dashboard/components/DashboardTopBar.js","features/dashboard/components/DoughnutChart.js","features/dashboard/index.js","utils/globalConstantUtil.js"],"sourcesContent":["import Subtitle from \"../Typography/Subtitle\";\r\n\r\nfunction TitleCard({ title, children, topMargin, TopSideButtons }) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")\r\n      }\r\n    >\r\n      {/* Title for Card */}\r\n      <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n        {title}\r\n\r\n        {/* Top side button, show only if present */}\r\n        {TopSideButtons && (\r\n          <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n        )}\r\n      </Subtitle>\r\n\r\n      <div className=\"divider mt-2\"></div>\r\n\r\n      {/** Card Body */}\r\n      <div className=\"h-full w-full pb-6 bg-base-100\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleCard;\r\n","import { useState } from \"react\"\r\n\r\n\r\nfunction InputText({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <input type={type || \"text\"} value={value} placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}className=\"input  input-bordered w-full \" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputText","function ErrorText({styleClass, children}){\r\n    return(\r\n        <p className={`text-center  text-error ${styleClass}`}>{children}</p>\r\n    )\r\n}\r\n\r\nexport default ErrorText"," function Subtitle({styleClass, children}){\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import { themeChange } from \"theme-change\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BellIcon from \"@heroicons/react/24/outline/BellIcon\";\r\nimport Bars3Icon from \"@heroicons/react/24/outline/Bars3Icon\";\r\nimport MoonIcon from \"@heroicons/react/24/outline/MoonIcon\";\r\nimport SunIcon from \"@heroicons/react/24/outline/SunIcon\";\r\nimport { openRightDrawer } from \"../features/common/rightDrawerSlice\";\r\nimport { RIGHT_DRAWER_TYPES } from \"../utils/globalConstantUtil\";\r\n\r\nimport { NavLink, Routes, Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n  const { noOfNotifications, pageTitle } = useSelector((state) => state.header);\r\n  const [currentTheme, setCurrentTheme] = useState(\r\n    localStorage.getItem(\"theme\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    themeChange(false);\r\n    if (currentTheme === null) {\r\n      if (\r\n        window.matchMedia &&\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n      ) {\r\n        setCurrentTheme(\"dark\");\r\n      } else {\r\n        setCurrentTheme(\"light\");\r\n      }\r\n    }\r\n    // 👆 false parameter is required for react project\r\n  }, []);\r\n\r\n  // Opening right sidebar for notification\r\n  const openNotification = () => {\r\n    dispatch(\r\n      openRightDrawer({\r\n        header: \"Notifications\",\r\n        bodyType: RIGHT_DRAWER_TYPES.NOTIFICATION,\r\n      })\r\n    );\r\n  };\r\n\r\n  function logoutUser() {\r\n    localStorage.clear();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar  flex justify-between bg-base-100  z-10 shadow-md \">\r\n        {/* Menu toogle for mobile view or small screen */}\r\n        <div className=\"\">\r\n          <label\r\n            htmlFor=\"left-sidebar-drawer\"\r\n            className=\"btn btn-primary drawer-button lg:hidden\"\r\n          >\r\n            <Bars3Icon className=\"h-5 inline-block w-5\" />\r\n          </label>\r\n          <h1 className=\"text-2xl font-semibold ml-2\">{pageTitle}</h1>\r\n        </div>\r\n\r\n        <div className=\"order-last\">\r\n          {/* Multiple theme selection, uncomment this if you want to enable multiple themes selection, \r\n                also includes corporate and retro themes in tailwind.config file */}\r\n\r\n          {/* <select className=\"select select-sm mr-4\" data-choose-theme>\r\n                    <option disabled selected>Theme</option>\r\n                    <option value=\"light\">Default</option>\r\n                    <option value=\"dark\">Dark</option>\r\n                    <option value=\"corporate\">Corporate</option>\r\n                    <option value=\"retro\">Retro</option>\r\n                </select> */}\r\n\r\n          {/* Light and dark theme selection toogle **/}\r\n          <span className=\"w-20 rounded-full\">\r\n            <a onClick={logoutUser}>Logout</a>\r\n          </span>\r\n\r\n          <label className=\"swap \">\r\n            <input type=\"checkbox\" />\r\n            <SunIcon\r\n              data-set-theme=\"light\"\r\n              data-act-class=\"ACTIVECLASS\"\r\n              className={\r\n                \"fill-current w-8 h-6 \" +\r\n                (currentTheme === \"dark\" ? \"swap-on\" : \"swap-off\")\r\n              }\r\n            />\r\n            <MoonIcon\r\n              data-set-theme=\"dark\"\r\n              data-act-class=\"ACTIVECLASS\"\r\n              className={\r\n                \"fill-current w-8 h-6 \" +\r\n                (currentTheme === \"light\" ? \"swap-on\" : \"swap-off\")\r\n              }\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// All components mapping with path for internal routes\r\n\r\nimport { lazy } from \"react\";\r\n\r\nconst Dashboard = lazy(() => import(\"../pages/protected/Dashboard\"));\r\nconst Welcome = lazy(() => import(\"../pages/protected/Welcome\"));\r\nconst Page404 = lazy(() => import(\"../pages/protected/404\"));\r\nconst Blank = lazy(() => import(\"../pages/protected/Blank\"));\r\nconst Charts = lazy(() => import(\"../pages/protected/Charts\"));\r\nconst Containers = lazy(() => import(\"../pages/protected/Containers\"));\r\nconst ProfileSettings = lazy(() =>\r\n  import(\"../pages/protected/ProfileSettings\")\r\n);\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\", // the url\r\n    component: Welcome, // view rendered\r\n  },\r\n  {\r\n    path: \"/dashboard/:id\", // the url\r\n    component: Dashboard, // view rendered\r\n  },\r\n  {\r\n    path: \"/welcome\", // the url\r\n    component: Welcome, // view rendered\r\n  },\r\n  {\r\n    path: \"/containers\",\r\n    component: Containers,\r\n  },\r\n  {\r\n    path: \"/settings-profile\",\r\n    component: ProfileSettings,\r\n  },\r\n  {\r\n    path: \"/charts\",\r\n    component: Charts,\r\n  },\r\n  {\r\n    path: \"/404\",\r\n    component: Page404,\r\n  },\r\n  {\r\n    path: \"/blank\",\r\n    component: Blank,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import Header from \"./Header\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport { Suspense, lazy } from \"react\";\r\nimport SuspenseContent from \"./SuspenseContent\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nconst Page404 = lazy(() => import(\"../pages/protected/404\"));\r\n\r\nfunction PageContent() {\r\n  const mainContentRef = useRef(null);\r\n  const { pageTitle } = useSelector((state) => state.header);\r\n\r\n  // Scroll back to top on new page load\r\n  useEffect(() => {\r\n    mainContentRef.current.scroll({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [pageTitle]);\r\n\r\n  return (\r\n    <div className=\"drawer-content flex flex-col \">\r\n      <Header />\r\n      <main\r\n        className=\"flex-1 overflow-y-auto pt-8 px-6  bg-base-200\"\r\n        ref={mainContentRef}\r\n      >\r\n        <Suspense fallback={<SuspenseContent />}>\r\n          <Routes>\r\n            {routes.map((route, key) => {\r\n              return (\r\n                <Route\r\n                  key={key}\r\n                  exact={true}\r\n                  path={`${route.path}`}\r\n                  element={<route.component />}\r\n                />\r\n              );\r\n            })}\r\n\r\n            {/* Redirecting unknown url to 404 page */}\r\n            <Route path=\"*\" element={<Page404 />} />\r\n          </Routes>\r\n        </Suspense>\r\n        <div className=\"h-16\"></div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageContent;\r\n","/** Icons are imported separatly to reduce build time */\r\nimport BellIcon from \"@heroicons/react/24/outline/BellIcon\";\r\nimport DocumentTextIcon from \"@heroicons/react/24/outline/DocumentTextIcon\";\r\nimport Squares2X2Icon from \"@heroicons/react/24/outline/Squares2X2Icon\";\r\nimport TableCellsIcon from \"@heroicons/react/24/outline/TableCellsIcon\";\r\nimport WalletIcon from \"@heroicons/react/24/outline/WalletIcon\";\r\nimport CodeBracketSquareIcon from \"@heroicons/react/24/outline/CodeBracketSquareIcon\";\r\nimport DocumentIcon from \"@heroicons/react/24/outline/DocumentIcon\";\r\nimport ExclamationTriangleIcon from \"@heroicons/react/24/outline/ExclamationTriangleIcon\";\r\nimport CalendarDaysIcon from \"@heroicons/react/24/outline/CalendarDaysIcon\";\r\nimport ArrowRightOnRectangleIcon from \"@heroicons/react/24/outline/ArrowRightOnRectangleIcon\";\r\nimport UserIcon from \"@heroicons/react/24/outline/UserIcon\";\r\nimport Cog6ToothIcon from \"@heroicons/react/24/outline/Cog6ToothIcon\";\r\nimport BoltIcon from \"@heroicons/react/24/outline/BoltIcon\";\r\nimport ChartBarIcon from \"@heroicons/react/24/outline/ChartBarIcon\";\r\nimport CurrencyDollarIcon from \"@heroicons/react/24/outline/CurrencyDollarIcon\";\r\nimport InboxArrowDownIcon from \"@heroicons/react/24/outline/InboxArrowDownIcon\";\r\nimport UsersIcon from \"@heroicons/react/24/outline/UsersIcon\";\r\nimport KeyIcon from \"@heroicons/react/24/outline/KeyIcon\";\r\nimport DocumentDuplicateIcon from \"@heroicons/react/24/outline/DocumentDuplicateIcon\";\r\n\r\nconst iconClasses = `h-6 w-6`;\r\nconst submenuIconClasses = `h-5 w-5`;\r\n\r\nconst routes = [\r\n  {\r\n    path: \"\", //no url needed as this has submenu\r\n    icon: <Cog6ToothIcon className={`${iconClasses} inline`} />, // icon component\r\n    name: \"Settings\", // name that appear in Sidebar\r\n    submenu: [\r\n      {\r\n        path: \"/app/settings-profile\", //url\r\n        icon: <UserIcon className={submenuIconClasses} />, // icon component\r\n        name: \"Profile\", // name that appear in Sidebar\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import ChevronDownIcon from  '@heroicons/react/24/outline/ChevronDownIcon'\r\nimport {useEffect, useState} from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n\r\nfunction SidebarSubmenu({submenu, name, icon}){\r\n    const location = useLocation()\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n\r\n    /** Open Submenu list if path found in routes, this is for directly loading submenu routes  first time */\r\n    useEffect(() => {\r\n        if(submenu.filter(m => {return m.path === location.pathname})[0])setIsExpanded(true)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='flex-col'>\r\n\r\n            {/** Route header */}\r\n            <div className='w-full' onClick={() => setIsExpanded(!isExpanded)}>\r\n                {icon} {name} \r\n                <ChevronDownIcon className={'w-5 h-5 mt-1 float-right delay-400 duration-500 transition-all  ' + (isExpanded ? 'rotate-180' : '')}/>\r\n            </div>\r\n\r\n            {/** Submenu list */}\r\n            <div className={` w-full `+ (isExpanded ? \"\" : \"hidden\")}>\r\n                <ul className={`menu menu-compact`}>\r\n                {\r\n                    submenu.map((m, k) => {\r\n                        return(\r\n                            <li key={k}>\r\n                                <Link to={m.path}>\r\n                                    {m.icon} {m.name}\r\n                                    {\r\n                                            location.pathname == m.path ? (<span className=\"absolute mt-1 mb-1 inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                                                aria-hidden=\"true\"></span>) : null\r\n                                    }\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarSubmenu","import routes from \"../routes/sidebar\";\r\nimport { NavLink, Routes, Link, useLocation } from \"react-router-dom\";\r\nimport SidebarSubmenu from \"./SidebarSubmenu\";\r\nimport XMarkIcon from \"@heroicons/react/24/outline/XMarkIcon\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction LeftSidebar() {\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const close = (e) => {\r\n    document.getElementById(\"left-sidebar-drawer\").click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawer-side \">\r\n      <label htmlFor=\"left-sidebar-drawer\" className=\"drawer-overlay\"></label>\r\n      <ul className=\"menu  pt-2 w-60 bg-base-100 text-base-content\">\r\n        <button\r\n          className=\"btn btn-ghost bg-base-300  btn-circle z-50 top-0 right-0 mt-4 mr-2 absolute lg:hidden\"\r\n          onClick={() => close()}\r\n        >\r\n          <XMarkIcon className=\"h-5 inline-block w-5\" />\r\n        </button>\r\n\r\n        <li className=\"mb-2 font-semibold text-xl\">\r\n          <Link to={\"/app/welcome\"}>\r\n            <img className=\"mask w-40\" src=\"/logo.png\" alt=\"Smartainer Logo\" />\r\n            {/* Smartainer */}\r\n          </Link>{\" \"}\r\n        </li>\r\n        {routes.map((route, k) => {\r\n          return (\r\n            <li className=\"\" key={k}>\r\n              {route.submenu ? (\r\n                <SidebarSubmenu {...route} />\r\n              ) : (\r\n                <NavLink\r\n                  end\r\n                  to={route.path}\r\n                  className={({ isActive }) =>\r\n                    `${\r\n                      isActive ? \"font-semibold  bg-base-200 \" : \"font-normal\"\r\n                    }`\r\n                  }\r\n                >\r\n                  {route.icon} {route.name}\r\n                  {location.pathname === route.path ? (\r\n                    <span\r\n                      className=\"absolute inset-y-0 left-0 w-1 rounded-tr-md rounded-br-md bg-primary \"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                </NavLink>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftSidebar;\r\n","function NotificationBodyRightDrawer(){\r\n    return(\r\n        <>\r\n             {\r\n                [...Array(15)].map((_, i) => {\r\n                    return <div key={i} className={\"grid mt-3 card bg-base-200 rounded-box p-3\" + (i < 5 ? \" bg-blue-100\" : \"\")}>\r\n                            {i % 2 === 0 ? `Your sales has increased by 30% yesterday` : `Total likes for instagram post - New launch this week,  has crossed 100k `}\r\n                        </div> \r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationBodyRightDrawer","import XMarkIcon from \"@heroicons/react/24/solid/XMarkIcon\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NotificationBodyRightDrawer from \"../features/common/components/NotificationBodyRightDrawer\";\r\nimport { closeRightDrawer } from \"../features/common/rightDrawerSlice\";\r\nimport { RIGHT_DRAWER_TYPES } from \"../utils/globalConstantUtil\";\r\n\r\nfunction RightSidebar() {\r\n  const { isOpen, bodyType, extraObject, header } = useSelector(\r\n    (state) => state.rightDrawer\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const close = (e) => {\r\n    dispatch(closeRightDrawer(e));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \" fixed overflow-hidden z-20 bg-gray-900 bg-opacity-25 inset-0 transform ease-in-out \" +\r\n        (isOpen\r\n          ? \" transition-opacity opacity-100 duration-500 translate-x-0  \"\r\n          : \" transition-all delay-500 opacity-0 translate-x-full  \")\r\n      }\r\n    >\r\n      <section\r\n        className={\r\n          \"w-80 md:w-96  right-0 absolute bg-base-100 h-full shadow-xl delay-400 duration-500 ease-in-out transition-all transform  \" +\r\n          (isOpen ? \" translate-x-0 \" : \" translate-x-full \")\r\n        }\r\n      >\r\n        <div className=\"relative  pb-5 flex flex-col  h-full\">\r\n          {/* Header */}\r\n          <div className=\"navbar   flex pl-4 pr-4   shadow-md \">\r\n            <button\r\n              className=\"float-left btn btn-circle btn-outline btn-sm\"\r\n              onClick={() => close()}\r\n            >\r\n              <XMarkIcon className=\"h-5 w-5\" />\r\n            </button>\r\n            <span className=\"ml-2 font-bold text-xl\">{header}</span>\r\n          </div>\r\n\r\n          {/* ------------------ Content Start ------------------ */}\r\n          <div className=\"overflow-y-scroll pl-4 pr-4\">\r\n            <div className=\"flex flex-col w-full\">\r\n              {/* Loading drawer body according to different drawer type */}\r\n              {\r\n                {\r\n                  [RIGHT_DRAWER_TYPES.NOTIFICATION]: (\r\n                    <NotificationBodyRightDrawer\r\n                      {...extraObject}\r\n                      closeRightDrawer={close}\r\n                    />\r\n                  ),\r\n                  [RIGHT_DRAWER_TYPES.DEFAULT]: <div></div>,\r\n                }[bodyType]\r\n              }\r\n            </div>\r\n          </div>\r\n          {/* ------------------ Content End ------------------ */}\r\n        </div>\r\n      </section>\r\n\r\n      <section\r\n        className=\" w-screen h-full cursor-pointer \"\r\n        onClick={() => close()}\r\n      ></section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightSidebar;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputText from \"../../../components/Input/InputText\";\r\nimport ErrorText from \"../../../components/Typography/ErrorText\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport { addNewContainer } from \"../containerSlice\";\r\nimport fastapi from \"../../../lib/api\";\r\n\r\nconst INITIAL_CONTAINER_OBJ = {\r\n  // id: 0,\r\n  name: \"\",\r\n  cold: \"\",\r\n  temperature: Math.random() * 30,\r\n  humidity: Math.random() * 30,\r\n  slope: Math.random() * 30,\r\n  vibration: Math.random() * 30,\r\n  port: \"\",\r\n  wharf: \"\",\r\n};\r\n\r\nfunction AddContainerModalBody({ closeModal }) {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [containerObj, setContainerObj] = useState(INITIAL_CONTAINER_OBJ);\r\n\r\n  const saveNewContainer = () => {\r\n    if (containerObj.name.trim() === \"\")\r\n      return setErrorMessage(\"이름을 입력해주세요.\");\r\n    else if (containerObj.cold.trim() === \"\")\r\n      return setErrorMessage(\"냉장 여부를 입력해주세요.\");\r\n    else if (containerObj.port.trim() === \"\")\r\n      return setErrorMessage(\"항만을 입력해주세요.\");\r\n    else if (containerObj.wharf.trim() === \"\")\r\n      return setErrorMessage(\"부두를 입력해주세요.\");\r\n    else {\r\n      if (containerObj.cold == \"냉장\") containerObj.cold = true;\r\n      else containerObj.cold = false;\r\n      let newContainerObj = {\r\n        name: containerObj.name,\r\n        cold: containerObj.cold,\r\n        temperature: parseFloat(containerObj.temperature),\r\n        slope: parseFloat(containerObj.slope),\r\n        humidity: parseFloat(containerObj.humidity),\r\n        vibration: parseFloat(containerObj.vibration),\r\n        port: containerObj.port,\r\n        wharf: containerObj.wharf,\r\n      };\r\n      dispatch(addNewContainer({ newContainerObj }));\r\n      dispatch(\r\n        showNotification({ message: \"New Container Added!\", status: 1 })\r\n      );\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    setContainerObj({ ...containerObj, [updateType]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputText\r\n        type=\"text\"\r\n        defaultValue={containerObj.name}\r\n        updateType=\"name\"\r\n        containerStyle=\"mt-4\"\r\n        labelTitle=\"컨테이너 이름\"\r\n        updateFormValue={updateFormValue}\r\n      />\r\n\r\n      <InputText\r\n        type=\"text\"\r\n        defaultValue={containerObj.cold}\r\n        updateType=\"cold\"\r\n        containerStyle=\"mt-4\"\r\n        labelTitle=\"냉장 여부 (냉장/실온)\"\r\n        updateFormValue={updateFormValue}\r\n      />\r\n\r\n      <InputText\r\n        type=\"text\"\r\n        defaultValue={containerObj.port}\r\n        updateType=\"port\"\r\n        containerStyle=\"mt-4\"\r\n        labelTitle=\"항만\"\r\n        updateFormValue={updateFormValue}\r\n      />\r\n\r\n      <InputText\r\n        type=\"text\"\r\n        defaultValue={containerObj.wharf}\r\n        updateType=\"wharf\"\r\n        containerStyle=\"mt-4\"\r\n        labelTitle=\"부두\"\r\n        updateFormValue={updateFormValue}\r\n      />\r\n\r\n      <ErrorText styleClass=\"mt-16\">{errorMessage}</ErrorText>\r\n      <div className=\"modal-action\">\r\n        <button className=\"btn btn-ghost\" onClick={() => closeModal()}>\r\n          Cancel\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary px-6\"\r\n          onClick={() => saveNewContainer()}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddContainerModalBody;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CONFIRMATION_MODAL_CLOSE_TYPES,\r\n  MODAL_CLOSE_TYPES,\r\n} from \"../../../utils/globalConstantUtil\";\r\nimport { deleteContainer } from \"../../containers/containerSlice\";\r\nimport { showNotification } from \"../headerSlice\";\r\n\r\nfunction ConfirmationModalBody({ extraObject, closeModal }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { message, type, _id, index } = extraObject;\r\n  const proceedWithYes = async () => {\r\n    if (type === CONFIRMATION_MODAL_CLOSE_TYPES.CONTAINER_DELETE) {\r\n      // positive response, call api or dispatch redux function\r\n      dispatch(deleteContainer({ index, _id }));\r\n      dispatch(showNotification({ message: \"Container Deleted!\", status: 1 }));\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\" text-xl mt-8 text-center\">{message}</p>\r\n\r\n      <div className=\"modal-action mt-12\">\r\n        <button className=\"btn btn-outline   \" onClick={() => closeModal()}>\r\n          Cancel\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-primary w-36\"\r\n          onClick={() => proceedWithYes()}\r\n        >\r\n          Yes\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmationModalBody;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Dashboard from \"../../dashboard\";\r\n\r\nconst INITIAL_CONTAINER_OBJ = {\r\n  //id: \"\",\r\n  name: \"\",\r\n  cold: \"\",\r\n  temperature: 0.0,\r\n  humidity: 0.0,\r\n  slope: 0.0,\r\n  vibration: 0.0,\r\n  port: \"\",\r\n  wharf: \"\",\r\n};\r\n\r\nfunction ShowContainerAnalysisModalBody({ extraObject, closeModal }) {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [containerObj, setContainerObj] = useState(INITIAL_CONTAINER_OBJ);\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    setContainerObj({ ...containerObj, [updateType]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dashboard container_id={extraObject.id} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowContainerAnalysisModalBody;\r\n","import { useEffect } from \"react\";\r\nimport { MODAL_BODY_TYPES } from \"../utils/globalConstantUtil\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeModal } from \"../features/common/modalSlice\";\r\nimport AddContainerModalBody from \"../features/containers/components/AddContainerModalBody\";\r\nimport ConfirmationModalBody from \"../features/common/components/ConfirmationModalBody\";\r\nimport ShowContainerAnalysisModalBody from \"../features/containers/components/ShowContainerAnalysisModalBody\";\r\n\r\nfunction ModalLayout() {\r\n  const { isOpen, bodyType, size, extraObject, title } = useSelector(\r\n    (state) => state.modal\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const close = (e) => {\r\n    dispatch(closeModal(e));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* The button to open modal */}\r\n\r\n      {/* Put this part before </body> tag */}\r\n      <div className={`modal ${isOpen ? \"modal-open\" : \"\"}`}>\r\n        <div className={`modal-box  ${size === \"lg\" ? \"max-w-5xl\" : \"\"}`}>\r\n          <button\r\n            className=\"btn btn-sm btn-circle absolute right-2 top-2\"\r\n            onClick={() => close()}\r\n          >\r\n            ✕\r\n          </button>\r\n          <h3 className=\"font-semibold text-2xl pb-6 text-center\">{title}</h3>\r\n\r\n          {/* Loading modal body according to different modal type */}\r\n          {\r\n            {\r\n              [MODAL_BODY_TYPES.CONTAINER_ADD_NEW]: (\r\n                <AddContainerModalBody\r\n                  closeModal={close}\r\n                  extraObject={extraObject}\r\n                />\r\n              ),\r\n              [MODAL_BODY_TYPES.CONFIRMATION]: (\r\n                <ConfirmationModalBody\r\n                  extraObject={extraObject}\r\n                  closeModal={close}\r\n                />\r\n              ),\r\n              [MODAL_BODY_TYPES.ANALYSIS]: (\r\n                <ShowContainerAnalysisModalBody\r\n                  extraObject={extraObject}\r\n                  closeModal={close}\r\n                />\r\n              ),\r\n              [MODAL_BODY_TYPES.DEFAULT]: <div></div>,\r\n            }[bodyType]\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalLayout;\r\n","import PageContent from \"./PageContent\"\r\nimport LeftSidebar from \"./LeftSidebar\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RightSidebar from './RightSidebar'\r\nimport { useEffect } from \"react\"\r\nimport  {  removeNotificationMessage } from \"../features/common/headerSlice\"\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ModalLayout from \"./ModalLayout\"\r\n\r\nfunction Layout(){\r\n  const dispatch = useDispatch()\r\n  const {newNotificationMessage, newNotificationStatus} = useSelector(state => state.header)\r\n\r\n\r\n  useEffect(() => {\r\n      if(newNotificationMessage !== \"\"){\r\n          if(newNotificationStatus === 1)NotificationManager.success(newNotificationMessage, 'Success')\r\n          if(newNotificationStatus === 0)NotificationManager.error( newNotificationMessage, 'Error')\r\n          dispatch(removeNotificationMessage())\r\n      }\r\n  }, [newNotificationMessage])\r\n\r\n    return(\r\n      <>\r\n        { /* Left drawer - containing page content and side bar (always open) */ }\r\n        <div className=\"drawer drawer-mobile\">\r\n            <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n            <PageContent/>\r\n            <LeftSidebar />\r\n        </div>\r\n\r\n        { /* Right drawer - containing secondary content like notifications list etc.. */ }\r\n        <RightSidebar />\r\n\r\n\r\n        {/** Notification layout container */}\r\n        <NotificationContainer />\r\n\r\n      {/* Modal layout container */}\r\n        <ModalLayout />\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Layout","function DashboardStats({ title, icon, value, description, colorIndex }) {\r\n  const COLORS = [\"primary\", \"#A6ADBB\"];\r\n\r\n  const getDescStyle = () => {\r\n    if (description.includes(\"↗︎\"))\r\n      return \"font-bold text-green-700 dark:text-green-300\";\r\n    else if (description.includes(\"↙\"))\r\n      return \"font-bold text-rose-500 dark:text-red-400\";\r\n    else return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"stats shadow\">\r\n      <div className=\"stat\">\r\n        <div className={`stat-figure dark:text-slate-300 text-${COLORS[1]}`}>\r\n          {icon}\r\n        </div>\r\n        <div className=\"stat-title dark:text-slate-300\">{title}</div>\r\n        <div className={`stat-value dark:text-slate-300 text-${COLORS[0]}`}>\r\n          {value}\r\n        </div>\r\n        {/* <div className={\"stat-desc  \" + getDescStyle()}>{description}</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardStats;\r\n","import HeartIcon  from '@heroicons/react/24/outline/HeartIcon'\r\nimport BoltIcon  from '@heroicons/react/24/outline/BoltIcon'\r\n\r\n\r\nfunction PageStats({}){\r\n    return(\r\n        <div className=\"stats bg-base-100 shadow\">\r\n  \r\n  <div className=\"stat\">\r\n    <div className=\"stat-figure invisible md:visible\">\r\n        <HeartIcon className='w-8 h-8'/>\r\n    </div>\r\n    <div className=\"stat-title\">Total Likes</div>\r\n    <div className=\"stat-value\">25.6K</div>\r\n    <div className=\"stat-desc\">21% more than last month</div>\r\n  </div>\r\n  \r\n  <div className=\"stat\">\r\n    <div className=\"stat-figure invisible md:visible\">\r\n        <BoltIcon className='w-8 h-8'/>\r\n    </div>\r\n    <div className=\"stat-title\">Page Views</div>\r\n    <div className=\"stat-value\">2.6M</div>\r\n    <div className=\"stat-desc\">14% more than last month</div>\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default PageStats","import TitleCard from \"../../../components/Cards/TitleCard\"\r\n\r\nconst userSourceData = [\r\n    {source : \"Facebook Ads\", count : \"26,345\", conversionPercent : 10.2},\r\n    {source : \"Google Ads\", count : \"21,341\", conversionPercent : 11.7},\r\n    {source : \"Instagram Ads\", count : \"34,379\", conversionPercent : 12.4},\r\n    {source : \"Affiliates\", count : \"12,359\", conversionPercent : 20.9},\r\n    {source : \"Organic\", count : \"10,345\", conversionPercent : 10.3},\r\n]\r\n\r\nfunction UserChannels(){\r\n    return(\r\n        <TitleCard title={\"User Signup Source\"}>\r\n             {/** Table Data */}\r\n             <div className=\"overflow-x-auto\">\r\n                <table className=\"table w-full\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th className=\"normal-case\">Source</th>\r\n                        <th className=\"normal-case\">No of Users</th>\r\n                        <th className=\"normal-case\">Conversion</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            userSourceData.map((u, k) => {\r\n                                return(\r\n                                    <tr key={k}>\r\n                                        <th>{k+1}</th>\r\n                                        <td>{u.source}</td>\r\n                                        <td>{u.count}</td>\r\n                                        <td>{`${u.conversionPercent}%`}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </TitleCard>\r\n    )\r\n}\r\n\r\nexport default UserChannels","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nfunction LineChart({ title, lastNum }) {\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const labels = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n  ];\r\n\r\n  let num = labels.map(() => {\r\n    return Math.random() * 30;\r\n  });\r\n  num.pop();\r\n  num.push(lastNum);\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        fill: true,\r\n        label: title,\r\n        data: num,\r\n        borderColor: \"rgb(53, 162, 235)\",\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <TitleCard title={\"Montly \" + title}>\r\n      <Line data={data} options={options} />\r\n    </TitleCard>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction BarChart(){\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          }\r\n        },\r\n      };\r\n      \r\n      const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n      \r\n      const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Store 1',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(255, 99, 132, 1)',\r\n          },\r\n          {\r\n            label: 'Store 2',\r\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n            backgroundColor: 'rgba(53, 162, 235, 1)',\r\n          },\r\n        ],\r\n      };\r\n\r\n    return(\r\n      <TitleCard title={\"Revenue\"}>\r\n            <Bar options={options} data={data} />\r\n      </TitleCard>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default BarChart","\r\nimport axios from 'axios'\r\nimport capitalize from 'capitalize-the-first-letter'\r\nimport React, { useState, useEffect } from 'react'\r\nimport InformationCircleIcon from '@heroicons/react/24/outline/InformationCircleIcon'\r\n\r\n\r\nfunction SelectBox(props){\r\n    \r\n    const {labelTitle, labelDescription, defaultValue, containerStyle, placeholder, labelStyle, options, updateType, updateFormValue} = props\r\n\r\n    const [value, setValue] = useState(defaultValue || \"\")\r\n\r\n\r\n    const updateValue = (newValue) =>{\r\n        updateFormValue({updateType, value : newValue})\r\n        setValue(newValue)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`inline-block ${containerStyle}`}>\r\n            <label  className={`label  ${labelStyle}`}>\r\n                <div className=\"label-text\">{labelTitle}\r\n                {labelDescription && <div className=\"tooltip tooltip-right\" data-tip={labelDescription}><InformationCircleIcon className='w-4 h-4'/></div>}\r\n                </div>\r\n            </label>\r\n\r\n            <select className=\"select select-bordered w-full\" value={value} onChange={(e) => updateValue(e.target.value)}>\r\n                <option disabled value=\"PLACEHOLDER\">{placeholder}</option>\r\n                {\r\n                    options.map((o, k) => {\r\n                        return <option value={o.value || o.name} key={k}>{o.name}</option>\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBox\r\n","import SelectBox from \"../../../components/Input/SelectBox\";\r\nimport ArrowDownTrayIcon from \"@heroicons/react/24/outline/ArrowDownTrayIcon\";\r\nimport ShareIcon from \"@heroicons/react/24/outline/ShareIcon\";\r\nimport EnvelopeIcon from \"@heroicons/react/24/outline/EnvelopeIcon\";\r\nimport EllipsisVerticalIcon from \"@heroicons/react/24/outline/EllipsisVerticalIcon\";\r\nimport ArrowPathIcon from \"@heroicons/react/24/outline/ArrowPathIcon\";\r\nimport { useState } from \"react\";\r\nimport Datepicker from \"react-tailwindcss-datepicker\";\r\n\r\nconst periodOptions = [\r\n  { name: \"Today\", value: \"TODAY\" },\r\n  { name: \"Yesterday\", value: \"YESTERDAY\" },\r\n  { name: \"This Week\", value: \"THIS_WEEK\" },\r\n  { name: \"Last Week\", value: \"LAST_WEEK\" },\r\n  { name: \"This Month\", value: \"THIS_MONTH\" },\r\n  { name: \"Last Month\", value: \"LAST_MONTH\" },\r\n];\r\n\r\nfunction DashboardTopBar({ updateDashboardPeriod }) {\r\n  const [dateValue, setDateValue] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  });\r\n\r\n  const handleDatePickerValueChange = (newValue) => {\r\n    setDateValue(newValue);\r\n    updateDashboardPeriod(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n      <div className=\"\">\r\n        <Datepicker\r\n          containerClassName=\"w-72 \"\r\n          value={dateValue}\r\n          theme={\"light\"}\r\n          inputClassName=\"input input-bordered w-72\"\r\n          popoverDirection={\"down\"}\r\n          toggleClassName=\"invisible\"\r\n          onChange={handleDatePickerValueChange}\r\n          showShortcuts={true}\r\n          primaryColor={\"white\"}\r\n        />\r\n        {/* <SelectBox \r\n                options={periodOptions}\r\n                labelTitle=\"Period\"\r\n                placeholder=\"Select date range\"\r\n                containerStyle=\"w-72\"\r\n                labelStyle=\"hidden\"\r\n                defaultValue=\"TODAY\"\r\n                updateFormValue={updateSelectBoxValue}\r\n            /> */}\r\n      </div>\r\n      <div className=\"text-right \">\r\n        <button className=\"btn btn-ghost btn-sm normal-case\">\r\n          <ArrowPathIcon className=\"w-4 mr-2\" />\r\n          Refresh Data\r\n        </button>\r\n        {/* <button className=\"btn btn-ghost btn-sm normal-case  ml-2\"><ShareIcon className=\"w-4 mr-2\"/>Share</button>\r\n\r\n                <div className=\"dropdown dropdown-bottom dropdown-end  ml-2\">\r\n                    <label tabIndex={0} className=\"btn btn-ghost btn-sm normal-case btn-square \"><EllipsisVerticalIcon className=\"w-5\"/></label>\r\n                    <ul tabIndex={0} className=\"dropdown-content menu menu-compact  p-2 shadow bg-base-100 rounded-box w-52\">\r\n                        <li><a><EnvelopeIcon className=\"w-4\"/>Email Digests</a></li>\r\n                        <li><a><ArrowDownTrayIcon className=\"w-4\"/>Download</a></li>\r\n                    </ul>\r\n                </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardTopBar;\r\n","import {\r\n  Chart as ChartJS,\r\n  Filler,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport TitleCard from '../../../components/Cards/TitleCard';\r\nimport Subtitle from '../../../components/Typography/Subtitle';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend,\r\n    Tooltip,\r\n    Filler,\r\n    Legend);\r\n\r\nfunction DoughnutChart(){\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n        },\r\n      };\r\n      \r\n      const labels = ['Electronics', 'Home Applicances', 'Beauty', 'Furniture', 'Watches', 'Apparel'];\r\n      \r\n      const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: '# of Orders',\r\n                data: [122, 219, 30, 51, 82, 13],\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.8)',\r\n                  'rgba(54, 162, 235, 0.8)',\r\n                  'rgba(255, 206, 86, 0.8)',\r\n                  'rgba(75, 192, 192, 0.8)',\r\n                  'rgba(153, 102, 255, 0.8)',\r\n                  'rgba(255, 159, 64, 0.8)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              }\r\n        ],\r\n      };\r\n\r\n    return(\r\n        <TitleCard title={\"Orders by Category\"}>\r\n                <Doughnut options={options} data={data} />\r\n        </TitleCard>\r\n    )\r\n}\r\n\r\n\r\nexport default DoughnutChart","import DashboardStats from \"./components/DashboardStats\";\r\nimport AmountStats from \"./components/AmountStats\";\r\nimport PageStats from \"./components/PageStats\";\r\n\r\nimport FireIcon from \"@heroicons/react/24/outline/FireIcon\";\r\nimport BellAlertIcon from \"@heroicons/react/24/outline/BellAlertIcon\";\r\nimport EyeDropperIcon from \"@heroicons/react/24/outline/EyeDropperIcon\";\r\nimport ArrowTrendingDownIcon from \"@heroicons/react/24/outline/ArrowTrendingDownIcon\";\r\nimport UserChannels from \"./components/UserChannels\";\r\nimport LineChart from \"./components/LineChart\";\r\nimport BarChart from \"./components/BarChart\";\r\nimport DashboardTopBar from \"./components/DashboardTopBar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showNotification } from \"../common/headerSlice\";\r\nimport DoughnutChart from \"./components/DoughnutChart\";\r\nimport fastapi from \"../../lib/api\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Dashboard({ container_id }) {\r\n  const dispatch = useDispatch();\r\n  const containerr = {\r\n    id: 1,\r\n    name: \"Virtual Container\",\r\n    cold: false,\r\n    temperature: 26.4,\r\n    humidity: 20.0,\r\n    slope: 17.3,\r\n    vibration: 31.5,\r\n    port: \"Port\",\r\n    wharf: \"Wharf\",\r\n    create_date: \"2021-04-15T15:40:15.087337\",\r\n    modify_date: \"2021-05-21T10:40:15.087337\",\r\n  };\r\n  const [container, setContainer] = useState(containerr);\r\n\r\n  useEffect(async () => {\r\n    console.log(\"왜?\");\r\n    await fastapi(\"get\", \"/api/container/detail/\" + container_id).then(\r\n      (data) => {\r\n        setContainer(data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const statsData = [\r\n    {\r\n      title: \"Temperature\",\r\n      value: container.temperature.toFixed(2),\r\n      icon: <FireIcon className=\"w-8 h-8\" />,\r\n      description: \"↗︎ 2300 (22%)\",\r\n    },\r\n    {\r\n      title: \"Slope\",\r\n      value: container.slope.toFixed(2),\r\n      icon: <ArrowTrendingDownIcon className=\"w-8 h-8\" />,\r\n      description: \"Current month\",\r\n    },\r\n    {\r\n      title: \"Humidity\",\r\n      value: container.humidity.toFixed(2),\r\n      icon: <EyeDropperIcon className=\"w-8 h-8\" />,\r\n      description: \"50 in hot containers\",\r\n    },\r\n    {\r\n      title: \"Vibration\",\r\n      value: container.vibration.toFixed(2),\r\n      icon: <BellAlertIcon className=\"w-8 h-8\" />,\r\n      description: \"↙ 300 (18%)\",\r\n    },\r\n  ];\r\n\r\n  const updateDashboardPeriod = (newRange) => {\r\n    // Dashboard range changed, write code to refresh your values\r\n    dispatch(\r\n      showNotification({\r\n        message: `Period updated to ${newRange.startDate} to ${newRange.endDate}`,\r\n        status: 1,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/** ---------------------- Select Period Content ------------------------- */}\r\n      <DashboardTopBar updateDashboardPeriod={updateDashboardPeriod} />\r\n\r\n      {/** ---------------------- Different stats content 1 ------------------------- */}\r\n      <div className=\"grid lg:grid-cols-4 mt-2 md:grid-cols-2 grid-cols-1 gap-6\">\r\n        {statsData.map((d, k) => {\r\n          return <DashboardStats key={k} {...d} colorIndex={k} />;\r\n        })}\r\n      </div>\r\n\r\n      {/** ---------------------- Different charts ------------------------- */}\r\n      <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n        <LineChart title=\"Temperature\" lastNum={container.temperature} />\r\n        <LineChart title=\"Slope\" lastNum={container.slope} />\r\n        <LineChart title=\"Humidity\" lastNum={container.humidity} />\r\n        <LineChart title=\"Vibration\" lastNum={container.vibration} />\r\n        {/* <BarChart /> */}\r\n      </div>\r\n\r\n      {/** ---------------------- Different stats content 2 ------------------------- */}\r\n\r\n      {/* <div className=\"grid lg:grid-cols-2 mt-10 grid-cols-1 gap-6\">\r\n        <AmountStats />\r\n        <PageStats />\r\n      </div> */}\r\n\r\n      {/** ---------------------- User source channels table  ------------------------- */}\r\n\r\n      {/* <div className=\"grid lg:grid-cols-2 mt-4 grid-cols-1 gap-6\">\r\n        <UserChannels />\r\n        <DoughnutChart />\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","module.exports = Object.freeze({\r\n  MODAL_BODY_TYPES: {\r\n    USER_DETAIL: \"USER_DETAIL\",\r\n    CONTAINER_ADD_NEW: \"CONTAINER_ADD_NEW\",\r\n    CONFIRMATION: \"CONFIRMATION\",\r\n    DEFAULT: \"\",\r\n  },\r\n\r\n  RIGHT_DRAWER_TYPES: {\r\n    NOTIFICATION: \"NOTIFICATION\",\r\n    CALENDAR_EVENTS: \"CALENDAR_EVENTS\",\r\n  },\r\n\r\n  CONFIRMATION_MODAL_CLOSE_TYPES: {\r\n    CONTAINER_DELETE: \"LEACONTAINER_DELETE\",\r\n  },\r\n});\r\n"],"names":["_ref","title","children","topMargin","TopSideButtons","_jsxs","className","Subtitle","styleClass","_jsx","labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","_useState","useState","_useState2","_slicedToArray","value","setValue","concat","onChange","e","val","target","useDispatch","_useSelector","useSelector","state","header","pageTitle","noOfNotifications","localStorage","getItem","currentTheme","setCurrentTheme","useEffect","themeChange","window","matchMedia","matches","_Fragment","htmlFor","Bars3Icon","onClick","clear","location","href","SunIcon","MoonIcon","Dashboard","lazy","Welcome","Page404","Blank","Charts","path","component","mainContentRef","useRef","current","scroll","top","behavior","Header","ref","Suspense","fallback","SuspenseContent","Routes","routes","map","route","key","Route","exact","element","icon","Cog6ToothIcon","name","submenu","UserIcon","useLocation","isExpanded","setIsExpanded","filter","m","pathname","ChevronDownIcon","k","Link","to","document","getElementById","click","XMarkIcon","src","alt","SidebarSubmenu","_objectSpread","NavLink","end","isActive","_toConsumableArray","Array","_","i","_RIGHT_DRAWER_TYPES$N","rightDrawer","isOpen","bodyType","extraObject","dispatch","close","closeRightDrawer","_defineProperty","RIGHT_DRAWER_TYPES","NOTIFICATION","NotificationBodyRightDrawer","DEFAULT","INITIAL_CONTAINER_OBJ","cold","temperature","Math","random","humidity","slope","vibration","port","wharf","closeModal","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","containerObj","setContainerObj","_ref2","InputText","ErrorText","trim","newContainerObj","parseFloat","addNewContainer","showNotification","message","status","saveNewContainer","_id","index","proceedWithYes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","CONFIRMATION_MODAL_CLOSE_TYPES","CONTAINER_DELETE","deleteContainer","stop","apply","arguments","container_id","id","_MODAL_BODY_TYPES$CON","modal","size","MODAL_BODY_TYPES","CONTAINER_ADD_NEW","AddContainerModalBody","CONFIRMATION","ConfirmationModalBody","ANALYSIS","ShowContainerAnalysisModalBody","newNotificationMessage","newNotificationStatus","NotificationManager","success","error","removeNotificationMessage","PageContent","LeftSidebar","RightSidebar","NotificationContainer","ModalLayout","COLORS","description","colorIndex","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","lastNum","labels","num","pop","push","data","datasets","fill","label","borderColor","backgroundColor","TitleCard","Line","options","responsive","plugins","legend","position","BarElement","updateDashboardPeriod","startDate","Date","endDate","dateValue","setDateValue","Datepicker","containerClassName","theme","inputClassName","popoverDirection","toggleClassName","newValue","showShortcuts","primaryColor","ArrowPathIcon","ArcElement","create_date","modify_date","container","setContainer","console","log","fastapi","then","statsData","toFixed","FireIcon","ArrowTrendingDownIcon","EyeDropperIcon","BellAlertIcon","DashboardTopBar","newRange","d","DashboardStats","LineChart","module","exports","Object","freeze","USER_DETAIL","CALENDAR_EVENTS"],"sourceRoot":""}