{"version":3,"file":"static/js/455.ece00d71.chunk.js","mappings":"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","sources":["components/Input/TextAreaInput.js","components/Input/ToogleInput.js","features/settings/profilesettings/index.js","pages/protected/ProfileSettings.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nfunction TextAreaInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateInputValue = (val) => {\r\n        setValue(val)\r\n        updateFormValue({updateType, value : val})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n            </label>\r\n            <textarea value={value} className=\"textarea textarea-bordered w-full\" placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TextAreaInput","import { useState } from \"react\"\r\n\r\n\r\nfunction ToogleInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateToogleValue = () => {\r\n        setValue(!value)\r\n        updateFormValue({updateType, value : !value})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label cursor-pointer\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n                <input type=\"checkbox\" className=\"toggle\" checked={value}  onChange={(e) => updateToogleValue()}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToogleInput\r\n","import moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TitleCard from \"../../../components/Cards/TitleCard\";\r\nimport { showNotification } from \"../../common/headerSlice\";\r\nimport InputText from \"../../../components/Input/InputText\";\r\nimport TextAreaInput from \"../../../components/Input/TextAreaInput\";\r\nimport ToogleInput from \"../../../components/Input/ToogleInput\";\r\n\r\nfunction ProfileSettings() {\r\n  const dispatch = useDispatch();\r\n\r\n  // Call API to update profile settings changes\r\n  const updateProfile = () => {\r\n    dispatch(showNotification({ message: \"Profile Updated\", status: 1 }));\r\n  };\r\n\r\n  const updateFormValue = ({ updateType, value }) => {\r\n    console.log(updateType);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <InputText\r\n            labelTitle=\"Name\"\r\n            defaultValue=\"Alex\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Email Id\"\r\n            defaultValue=\"alex@dashwind.com\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Title\"\r\n            defaultValue=\"UI/UX Designer\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Place\"\r\n            defaultValue=\"California\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <TextAreaInput\r\n            labelTitle=\"About\"\r\n            defaultValue=\"Doing what I love, part time traveller\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n        </div>\r\n        <div className=\"divider\"></div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <InputText\r\n            labelTitle=\"Language\"\r\n            defaultValue=\"English\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <InputText\r\n            labelTitle=\"Timezone\"\r\n            defaultValue=\"IST\"\r\n            updateFormValue={updateFormValue}\r\n          />\r\n          <ToogleInput\r\n            updateType=\"syncData\"\r\n            labelTitle=\"Sync Data\"\r\n            defaultValue={true}\r\n            updateFormValue={updateFormValue}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mt-16\">\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={() => updateProfile()}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </TitleCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileSettings;\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPageTitle } from '../../features/common/headerSlice'\r\nimport ProfileSettings from '../../features/settings/profilesettings'\r\n\r\nfunction InternalPage(){\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPageTitle({ title : \"Settings\"}))\r\n      }, [])\r\n\r\n\r\n    return(\r\n        <ProfileSettings />\r\n    )\r\n}\r\n\r\nexport default InternalPage"],"names":["_ref","labelTitle","labelStyle","containerStyle","type","defaultValue","placeholder","updateFormValue","updateType","_useState","useState","_useState2","_slicedToArray","value","setValue","_jsxs","className","concat","children","_jsx","onChange","e","val","target","checked","dispatch","useDispatch","console","log","_Fragment","TitleCard","title","topMargin","InputText","TextAreaInput","ToogleInput","onClick","showNotification","message","status","useEffect","setPageTitle","ProfileSettings"],"sourceRoot":""}